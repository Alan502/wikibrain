// An default configuration file in HOCON format, almost JSON format
// The file format is described at https://github.com/typesafehub/config.

// Parent directory for data files, downloads, scripts, etc.
baseDir : ..

// Directory used for temporary files.
// Override this if you don't have hundreds of GBs free in your system's tmp directory.
tmpDir : ${baseDir}"/.tmp"

// Maximum number of threads that should run simultaneously
// defaults to Runtime.getRuntime().availableProcessors()
maxThreads : -1

// Language sets
// You can specify a custom language set from the command line.
// See EnvBuilder for more information.
languages : {
    default : simple

    big-economies : {
        langCodes : [
            "en","de","fr","nl","it","pl","es","ru","ja","pt","zh",
            "sv","uk","ca","no","fi","cs","hu","ko","id","tr","ro",
            "sk","da","he","simple"
        ]
    }
    english : {
        langCodes : ["en", "simple"]
    }
    simple : {
        langCodes : ["simple"]
    }

    // This can be dynamically populated using the EnvBuilder
    custom : {
        langCodes : []
    }
}


// Filesets downloaded by default
download : {
    matcher : ["articles"]
    listFile : "downloadList.tsv"
    path : ${baseDir}"/download"
}

// Configuration for the lucene search engine.
lucene : {
    version : "4.3"
    directory : ${baseDir}"/db/lucene"
    options : {
        default : plaintext
        plaintext : {
            type : plaintext

            version : ${lucene.version}
            directory : ${lucene.directory}
            namespaces : ["article"]

            // TokenizerOptions
            caseInsensitive : true
            useStopWords : true
            useStem : true

            // TextFieldElements
            title : 0
            redirects : false
            plaintext : true
        }

        esa : {
            type : esa

            version : ${lucene.version}
            directory : ${lucene.directory}
            namespaces : ["article"]

            // TokenizerOptions
            caseInsensitive : true
            useStopWords : true
            useStem : true

            // TextFieldElements
            title : 1
            redirects : true
            plaintext : true
        }
    }
    searcher : {
        searcher : {
            langs : ${languages}
            options : esa
        }
    }
}

// phrase analyzers resolve phrases to articles and vice-versa
phrases {
    // whether or not the phrase analyzers are being loaded.
    // will be overridden while saving corpora to the daos
    loading : false

    // Analyzers
    analyzer : {
        default : lucene
        stanford : {
            phraseDao : stanford
            localPageDao : default
            path : ./dictionary.bz2
            type : stanford
            phrasePruner : {
                type : string
                minCount : 3,
                maxRank : 10,
                minFraction : 0.001
            }
            pagePruner : {
                type : simple
                minCount : 3,
                maxRank : 15,
                minFraction : 0.001
            }
        }
        anchortext : {
            phraseDao : anchortext
            localPageDao : default
            localLinkDao : default
            type : anchortext
            phrasePruner : {
                type : string
                minCount : 1,
                maxRank : 10,
                minFraction : 0.001
            }
            pagePruner : {
                type : simple
                minCount : 1,
                maxRank : 15,
                minFraction : 0.001
            }
        }
        lucene : {
            type : lucene
            localPageDao : default
        }
        cascading : {
            type : cascading
            delegates : [ "stanford", "lucene" ]
        }
    }

    // Daos store data associated with an algorithm and analyzer
    dao {

        stanford : {
            isNew : ${phrases.loading}
            path : ${baseDir}"/db/phrases/stanford"
            type : objectdb
        }
        anchortext : {
            isNew : ${phrases.loading}
            path : ${baseDir}"/db/phrases/anchortext"
            type : objectdb
        }
    }
}

// data access objects
dao : {
    dataSource : {
        h2db : {
           driver : org.h2.Driver
           url: "jdbc:h2:"${baseDir}"/db/h2"
           username : sa
           password : ""
        }
    }
    localPage : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
        }
        live : {}
    }
    localLink : {
        default : matrix
        sql : {
            type : sql
            dataSource : h2db
        }
        matrix : {
            type : matrix
            delegate : sql
            maxOpenPages : 3
            maxPageSize : 100M
            path : ${baseDir}"/db/matrix/local-link"
        }
        live : {}
    }
    rawPage : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
            localPageDao : sql
        }
        live : {}
    }
    universalPage : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
        }
        live : {}
    }

    localCategoryMember : {
        default : sql
        sql : {
            type : sql
            dataSource: h2db
        }
        live : {}
    }
    universalLink : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
            localLinkDao : sql
        }
        skeletal-sql : {
            type : skeletal-sql
            dataSource : h2db
        }
        live : {}
    }
    redirect : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
        }
        live : {}
    }
}

mapper : {
    default : monolingual
    monolingual : {
        type : monolingual
        algorithmId : 0     // each algorithm must have a unique ID
        localPageDao : sql
    }
    purewikidata : {
        type : purewikidata
        algorithmId : 1
        localPageDao : sql
    }
}

sr : {
    disambig : {
        default : topResult
        topResult : {
            type : topResult
            phraseAnalyzer : default
        }
    }

    metric {
        path : ${baseDir}"/dat/sr/"
        local : {
            default : ESA
            LocalMilneWitten : {
                type : LocalMilneWitten
                disambiguator : default
                linkDao : default
                pageDao : default
                outLinks : false
                similaritynormalizer : loess
                mostsimilarnormalizer : rank
            }
            ESA : {
                type : ESA
                pageDao : default
                disambiguator : default
                similaritynormalizer : percentile
                mostsimilarnormalizer : rank
                concepts : ${baseDir}"/dat/esa_concepts"
                resolvephrases : false
            }
        }
        universal : {
            default : UniversalMilneWitten
            UniversalMilneWitten : {
                type: UniversalMilneWitten
                disambiguator : default
                linkDao : default
                pageDao : default
                outLinks : false
                similaritynormalizer : loess
                mostsimilarnormalizer : rank
            }
        }
    }

    normalizer {
        defaultmaxresults : 100
        identity : {
            type : identity
        }
        logLoess : {
            type : loess
            log : true
        }
        loess : {
            type : loess
        }
        log : {
            type : log
        }
        percentile : {
            type : percentile
        }
        range : {
            type : range
            min : 0.0
            max : 1.0
            truncate : true
        }
        rank : {
            type : rank
        }
    }

    explanation {
        localpagedao = sql
    }

    dataset : {
        defaultsets : ["wordsim353.txt","MC.txt"]
        sets : {
            atlasify240.txt : ["simple", "en"]
            MC.txt : ["simple", "en"]
            radinsky.txt : ["simple", "en"]
            RG.txt : ["simple", "en"]
            WikiSimi3000.txt : ["simple", "en"]
            wordsim353.txt : ["simple", "en"]
            atalsify181ru2.csv : ["ru"]
            atalisfy195zh6.csv : ["zh"]
            gur350.csv : ["de"]
            pedersen_coder.csv : ["simple", "en"]
            pedersen_doctor.csv : ["simple", "en"]
            sanchez-casas144_similarity.csv : ["es"]
            tsa287SpellCheck.csv : ["simple", "en"]
            zg222.csv : ["de"]
        }
        // pairs under this threshold won't be used for most similar training.
        mostSimilarThreshold : 0.7
        path : ../dat/gold/cleaned/
        metadata : ../dat/gold/cleaned/metadata.txt
        records : ../dat/records/
    }

}
